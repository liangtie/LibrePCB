{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "cmake-pedantic",
      "hidden": true,
      "warnings": {
        "dev": true,
        "deprecated": true,
        "unusedCli": true,
        "systemVars": false
      },
      "errors": {
        "dev": true,
        "deprecated": true
      }
    },
    {
      "name": "dev-mode",
      "hidden": true,
      "inherits": "cmake-pedantic"
    },
    {
      "name": "release-mode",
      "hidden": true,
      "inherits": "cmake-pedantic",
      "cacheVariables": {
        "RPA_PREPROCESSOR_DEVELOPER_MODE": "ON",
        "VCPKG_MANIFEST_FEATURES": "test",
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
      }
    },
    {
      "name": "vcpkg-win64-static",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}/"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "OFF",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_SKIP_INSTALL_RULES": true,
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "flags-unix",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wshadow -Wformat=2 -Wundef -Werror=float-equal  "
      }
    },
    {
      "name": "flags-windows",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": " /W4 /permissive- /volatile:iso /Zc:preprocessor /EHsc /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /wd5105 /wd4068"
      }
    },
    {
      "name": "ci-unix",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": [
        "flags-unix",
        "ci-std"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-win64",
      "inherits": [
        "flags-windows",
        "ci-std",
        "vcpkg",
        "vcpkg-win64-static"
      ],
      "generator": "Visual Studio 15 2017",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "ci-win64-ninja",
      "inherits": [
        "flags-windows",
        "ci-std",
        "vcpkg",
        "vcpkg-win64-static"
      ],
      "generator": "Ninja",
      "hidden": true
    },
    {
      "name": "coverage-unix",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "ci-unix",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": [
        "coverage-unix",
        "dev-mode"
      ],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
        "ci-unix",
        "dev-mode"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_CXX_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-macos",
      "inherits": [
        "ci-build",
        "ci-unix",
        "dev-mode"
      ]
    },
    {
      "name": "ci-ubuntu",
      "inherits": [
        "ci-build",
        "ci-unix",
        "clang-tidy",
        "cppcheck",
        "dev-mode"
      ]
    },
    {
      "name": "ci-windows",
      "inherits": [
        "ci-build",
        "ci-win64",
        "dev-mode"
      ]
    },
    {
      "name": "ci-windows-ninja",
      "inherits": [
        "ci-build",
        "ci-win64-ninja",
        "dev-mode"
      ]
    },
    {
      "name": "ci-windows-release",
      "inherits": [
        "ci-build",
        "ci-win64",
        "release-mode"
      ]
    },
    {
      "name": "ci-windows-ninja-release",
      "inherits": [
        "ci-build",
        "ci-win64-ninja",
        "release-mode"
      ]
    }
  ],
  "testPresets": [
    {
      "name": "ci-windows-ninja-release-test",
      "configurePreset": "ci-windows-ninja-release",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "jobs": 8
      }
    },
    {
      "name": "ci-windows-release-test",
      "configurePreset": "ci-windows-release",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "jobs": 8
      }
    },
    {
      "name": "ci-windows-ninja-test",
      "configurePreset": "ci-windows-ninja",
      "output": {
        "outputOnFailure": true
      },
      "execution": {
        "jobs": 8
      }
    }
  ]
}